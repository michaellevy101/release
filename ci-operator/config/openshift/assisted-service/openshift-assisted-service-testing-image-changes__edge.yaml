base_images:
  assisted-image-service:
    name: ocm-2.6
    namespace: edge-infrastructure
    tag: assisted-image-service
  assisted-installer:
    name: ocm-2.6
    namespace: edge-infrastructure
    tag: assisted-installer
  assisted-installer-agent:
    name: ocm-2.6
    namespace: edge-infrastructure
    tag: assisted-installer-agent
  assisted-installer-controller:
    name: ocm-2.6
    namespace: edge-infrastructure
    tag: assisted-installer-controller
  cli:
    name: "4.11"
    namespace: ocp
    tag: cli
  coreos_centos_stream8:
    name: stream8
    namespace: coreos
    tag: "8"
  coreos_centos_stream9:
    name: stream9
    namespace: coreos
    tag: "9"
  edge_infrastructure_swagger_codegen_cli:
    name: edge-infrastructure-swagger-codegen-cli
    namespace: ci
    tag: 2.4.18
  golangci-lint:
    name: golangci-lint
    namespace: ci
    tag: v1.37.1
  goswagger_swagger:
    name: goswagger-swagger
    namespace: ci
    tag: v0.28.0
  openshift_release_golang-1.17:
    name: release
    namespace: openshift
    tag: golang-1.17
  postgresql-12-centos7:
    name: postgresql-12-centos7
    namespace: edge-infrastructure
    tag: latest
build_root:
  image_stream_tag:
    name: release
    namespace: openshift
    tag: golang-1.17
images:
- dockerfile_literal: |
    FROM registry.access.redhat.com/ubi9/ubi-minimal as tools
    RUN  microdnf update -y && microdnf  install -y tar gzip unzip which && microdnf clean all
    COPY --from=registry.ci.openshift.org/openshift/release:golang-1.17 /usr/local/go /usr/local/go
    ENV GOBIN=/tools/
    ENV GOPATH=/go
    ENV GOROOT=/usr/local/go
    ENV PATH=$PATH:$GOROOT/bin:$GOBIN
    COPY --from=quay.io/app-sre/golangci-lint:v1.37.1 /usr/bin/golangci-lint /tools/golangci-lint
    COPY --from=quay.io/goswagger/swagger:v0.28.0 /usr/bin/swagger /tools/goswagger
    COPY --from=quay.io/edge-infrastructure/swagger-codegen-cli:2.4.18 /opt/swagger-codegen-cli /tools/swagger-codegen-cli
    COPY --from=quay.io/openshift/origin-cli:latest /usr/bin/oc /tools
    COPY --from=quay.io/operator-framework/upstream-opm-builder:v1.16.1 /bin/opm /tools
    RUN curl --retry 5 -L https://github.com/stoplightio/spectral/releases/download/v5.9.1/spectral-linux -o /tools/spectral && \
        curl --retry 5 -L https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64 --output /tools/jq && \
        curl --retry 5 -L https://github.com/containers/podman/releases/download/v3.4.4/podman-remote-static.tar.gz -o "/tmp/podman-remote3.tar.gz" && \
            tar -zxvf /tmp/podman-remote3.tar.gz && \
            mv podman-remote-static /tools/podman-remote3 && \
            rm -f /tmp/podman-remote3.tar.gz &&\
        curl --retry 5 -L https://github.com/containers/podman/releases/download/v4.1.1/podman-remote-static.tar.gz -o "/tmp/podman-remote4.tar.gz" && \
            tar -zxvf /tmp/podman-remote4.tar.gz && \
            mv podman-remote-static /tools/podman-remote4 && \
            rm -f /tmp/podman-remote4.tar.gz && \
        curl -L --retry 5 "https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv4.3.0/kustomize_v4.3.0_linux_amd64.tar.gz" | \
            tar -zx -C /tools/ && \
            rm -f kustomize_v4.3.0_linux_amd64.tar.gz && \
        curl --retry 5 -L https://github.com/operator-framework/operator-sdk/releases/download/v1.10.1/operator-sdk_linux_amd64 --output /tmp/operator-sdk_linux_amd64 && \
                chmod +x /tmp/operator-sdk_linux_amd64 && \
                install /tmp/operator-sdk_linux_amd64 /tools/operator-sdk && \
        curl --retry 5 -L "https://dl.k8s.io/release/$(curl --retry 5 -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl" -o /tmp/kubectl && \
            install -o root -g root -m 0755 /tmp/kubectl /tools/kubectl && \
            rm -f /tmp/kubectl
     RUN go install gotest.tools/gotestsum@v1.6.3 && \
         go install github.com/axw/gocov/gocov@latest && \
         go install github.com/AlekSi/gocov-xml@v0.0.0-20190121064608-3a14fb1c4737 && \
         go install github.com/golang/mock/mockgen@v1.5.0 && \
         go install sigs.k8s.io/controller-tools/cmd/controller-gen@v0.6.2 && \
         go install golang.org/x/tools/cmd/goimports@v0.1.5 && \
         rm -Rf /go/pkg
    RUN chmod -R +x /tools

    FROM registry.access.redhat.com/ubi9/ubi-minimal
    ENV GOPATH=/go
    ENV GOROOT=/usr/local/go
    ENV VIRTUAL_ENV=/opt/venv
    ENV PATH="$VIRTUAL_ENV/bin:$GOROOT/bin:$GOPATH/bin:$PATH"
    ENV CGO_CFLAGS="-g -O2 -Wno-return-local-addr"
    COPY --from=tools /tools/ /usr/bin/
    COPY --from=tools /usr/local/go /usr/local/go
    RUN microdnf update -y && \
        microdnf install -y unzip diffutils python3-pip skopeo postgresql sqlite gcc git  && \
        microdnf clean all
    WORKDIR /home/assisted-service
    COPY ./dev-requirements.txt /home/assisted-service/
    RUN mkdir build && chmod g+xw -R build/ && \
        python3 -m venv ${VIRTUAL_ENV:-/opt/venv} && \
        python3 -m pip install --upgrade pip && \
        python3 -m pip install -r ./dev-requirements.txt
    COPY . /home/assisted-service/
    RUN go mod vendor
    RUN chmod 775 -R $GOPATH && chmod 775 -R $(go env GOROOT) && chmod 775 -R /home/assisted-service/ && \
        mkdir /.cache && chmod 775 -R /.cache
  inputs:
    cli:
      as:
      - quay.io/openshift/origin-cli:latest
    edge_infrastructure_swagger_codegen_cli:
      as:
      - quay.io/edge-infrastructure/swagger-codegen-cli:2.4.18
    golangci-lint:
      as:
      - quay.io/app-sre/golangci-lint:v1.37.1
    goswagger_swagger:
      as:
      - quay.io/goswagger/swagger:v0.28.0
    openshift_release_golang-1.17:
      as:
      - registry.ci.openshift.org/openshift/release:golang-1.17
  to: assisted-service-ubi9
- dockerfile_path: Dockerfile.assisted-service-build
  inputs:
    edge_infrastructure_swagger_codegen_cli:
      as:
      - quay.io/edge-infrastructure/swagger-codegen-cli:2.4.18
    goswagger_swagger:
      as:
      - quay.io/goswagger/swagger:v0.28.0
    openshift_release_golang-1.17:
      as:
      - registry.ci.openshift.org/openshift/release:golang-1.17
    postgresql-12-centos7:
      as:
      - quay.io/centos7/postgresql-12-centos7:latest
  to: assisted-service-build
- dockerfile_path: Dockerfile.assisted-service
  inputs:
    coreos_centos_stream8:
      as:
      - quay.io/centos/centos:stream8
    openshift_release_golang-1.17:
      as:
      - registry.ci.openshift.org/openshift/release:golang-1.17
  to: assisted-service
- dockerfile_literal: |
    FROM coreos/centos
    COPY . .
  from: src
  to: assisted-service-scripts
- dockerfile_literal: |
    FROM coreos/centos
    RUN yum install -y skopeo
  from: src
  to: assisted-service-publish-index
operator:
  bundles:
  - dockerfile_path: deploy/olm-catalog/bundle.Dockerfile
  substitutions:
  - pullspec: quay.io/edge-infrastructure/assisted-service:latest
    with: assisted-service
  - pullspec: quay.io/edge-infrastructure/assisted-installer:latest
    with: assisted-installer
  - pullspec: quay.io/edge-infrastructure/assisted-installer-agent:latest
    with: assisted-installer-agent
  - pullspec: quay.io/edge-infrastructure/assisted-installer-controller:latest
    with: assisted-installer-controller
  - pullspec: quay.io/edge-infrastructure/assisted-image-service:latest
    with: assisted-image-service
  - pullspec: quay.io/centos7/postgresql-12-centos7:latest
    with: postgresql-12-centos7
releases:
  candidate-4-11:
    candidate:
      product: ocp
      stream: nightly
      version: "4.11"
  latest:
    integration:
      include_built_images: true
      name: "4.10"
      namespace: ocp
  stable-4-9:
    integration:
      name: "4.9"
      namespace: ocp
  stable-4-10:
    integration:
      name: "4.10"
      namespace: ocp
resources:
  '*':
    requests:
      cpu: 100m
      memory: 200Mi
test_binary_build_commands: |
  make build-openshift-ci-test-bin
  go mod vendor
  mkdir /.cache && chmod 775 -R /.cache && chmod 775 -R $GOPATH
tests:
- as: verify-generated-code
  skip_if_only_changed: ^docs/|^sites/|\.md$|^(LICENSE|OWNERS|OWNER_ALIASES)$
  steps:
    test:
    - ref: assisted-verify-generated-code
- as: unit-test
  commands: |
    export REPORTS=/tmp/reports
    export CODECOV_TOKEN=$(cat /tmp/secret/codecov-token)
    export GINKGO_REPORTFILE=${ARTIFACT_DIR}/junit_unit_test.xml
    make ci-unit-test
  container:
    from: assisted-service-ubi9
  secret:
    mount_path: /tmp/secret
    name: assisted-service-codecov-token
  skip_if_only_changed: ^docs/|^sites/|\.md$|^(LICENSE|OWNERS|OWNER_ALIASES)$
- as: unit-test-postsubmit
  commands: |
    export REPORTS=/tmp/reports
    export CODECOV_TOKEN=$(cat /tmp/secret/codecov-token)
    export GINKGO_REPORTFILE=${ARTIFACT_DIR}/junit_unit_test.xml
    make ci-unit-test
  container:
    from: assisted-service-ubi9
  postsubmit: true
  secret:
    mount_path: /tmp/secret
    name: assisted-service-codecov-token
- as: subsystem-aws
  cluster_claim:
    architecture: amd64
    cloud: aws
    owner: openshift-ci
    product: ocp
    timeout: 1h0m0s
    version: "4.10"
  run_if_changed: ^(cmd/.*|deploy/.*|hack/.*|internal/.*|pkg/.*|tools/.*|subsystem/.*|Dockerfile\..*|Makefile|go\.mod|go\.sum|swagger.yaml)$
  steps:
    allow_best_effort_post_steps: true
    test:
    - as: subsystem-deploy-and-run
      cli: latest
      commands: |
        export BUILD_TYPE=CI
        export REPORTS=${ARTIFACT_DIR}
        export TARGET=oc
        export PERSISTENT_STORAGE="False"
        export TARGET='oc'
        export GENERATE_CRD='false'
        unset GOFLAGS
        make ci-deploy-for-subsystem
        oc get pods
        make test
      dependencies:
      - env: SERVICE
        name: assisted-service
      from: assisted-service-ubi9
      resources:
        requests:
          cpu: 100m
          memory: 200Mi
    workflow: generic-claim
- as: subsystem-kubeapi-aws
  cluster_claim:
    architecture: amd64
    cloud: aws
    owner: openshift-ci
    product: ocp
    timeout: 1h0m0s
    version: "4.10"
  run_if_changed: ^(cmd/.*|deploy/.*|hack/.*|internal/.*|pkg/.*|tools/.*|subsystem/.*|Dockerfile\..*|Makefile|go\.mod|go\.sum|swagger.yaml)$
  steps:
    allow_best_effort_post_steps: true
    test:
    - as: subsystem-deploy-and-run
      cli: latest
      commands: |
        export BUILD_TYPE=CI
        export REPORTS=${ARTIFACT_DIR}
        export TARGET=oc
        export PERSISTENT_STORAGE="False"
        export TARGET='oc'
        export GENERATE_CRD='false'
        unset GOFLAGS
        make ci-deploy-for-subsystem
        oc get pods
        make enable-kube-api-for-subsystem
        make test-kube-api
      dependencies:
      - env: SERVICE
        name: assisted-service
      from: assisted-service-ubi9
      resources:
        requests:
          cpu: 100m
          memory: 200Mi
    workflow: generic-claim
- as: lint
  commands: |
    export GOCACHE=/tmp/
    export GOLANGCI_LINT_CACHE=/tmp/.cache
    export GOPROXY=https://proxy.golang.org
    make lint
  container:
    from: assisted-service-ubi9
  skip_if_only_changed: ^docs/|^sites/|\.md$|^(LICENSE|OWNERS|OWNER_ALIASES)$
zz_generated_metadata:
  branch: testing-image-changes
  org: openshift
  repo: assisted-service
  variant: edge
